Vagrant.configure("2") do |config|
  # This will be applied to every vagrant file that comes after it
  config.vm.box = "ubuntu/bionic64"
  # K8s Control Plane
  common = <<-'SHELL'
        if  grep -q rancher01 /etc/hosts; then sudo sed -i '1s/^/192.168.56.4\trancher01\n/' /etc/hosts ;fi
        if  grep -q rancher02 /etc/hosts; then sudo sed -i '1s/^/192.168.56.5\trancher02\n/' /etc/hosts ;fi
        if  grep -q rancher03 /etc/hosts; then sudo sed -i '1s/^/192.168.56.6\trancher03n/' /etc/hosts ;fi
        if ! grep -q master /etc/hosts; then  sudo echo "192.168.56.4     rancher01" >> /etc/hosts ;fi
        if ! grep -q worker01 /etc/hosts; then  sudo echo "192.168.56.5     rancher02" >> /etc/hosts ;fi
        if ! grep -q worker02 /etc/hosts; then  sudo echo "192.168.56.6     rancher03" >> /etc/hosts ;fi
        sudo echo "192.168.56.4     mybibindrancher.local   registry.bibind.local" >> /etc/hosts
        sudo echo "192.168.56.5     mybibindrancher.local   registry.bibind.local" >> /etc/hosts
        sudo echo "192.168.56.6     mybibindrancher.local   registry.bibind.local" >> /etc/hosts

        SHELL

  ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
    config.vm.provision 'shell', inline: 'mkdir -p /root/.ssh'
    config.vm.provision 'shell', inline: 'touch  /root/.ssh/authorized_keys'
    config.vm.provision 'shell', inline: "echo #{ssh_pub_key} >> /root/.ssh/authorized_keys"
    config.vm.provision 'shell', inline: "echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys"
    config.vm.provision 'shell', inline: 'sudo systemctl reload sshd.service', privileged: false


  ## Master Node
  config.vm.define "rancher01" do |k8s_master|
     k8s_master.vm.provision "shell", inline: common
     k8s_master.vm.network "private_network", ip: "192.168.56.4"
     k8s_master.vm.hostname = "192.168.56.4"
     k8s_master.vm.provider "virtualbox" do |v|
       v.customize ["modifyvm", :id, "--audio", "none"]
       v.memory = 4024
       v.cpus = 2
    end
  end

  config.vm.define "rancher02" do |k8s_master|
       k8s_master.vm.provision "shell", inline: common
       k8s_master.vm.network "private_network", ip: "192.168.56.5"
       k8s_master.vm.hostname = "192.168.56.5"
       k8s_master.vm.provider "virtualbox" do |v|
         v.customize ["modifyvm", :id, "--audio", "none"]
         v.memory = 4024
         v.cpus = 2
      end
    end

    config.vm.define "rancher03" do |k8s_master|
         k8s_master.vm.provision "shell", inline: common
         k8s_master.vm.network "private_network", ip: "192.168.56.6"
         k8s_master.vm.hostname = "192.168.56.6"
         k8s_master.vm.provider "virtualbox" do |v|
           v.customize ["modifyvm", :id, "--audio", "none"]
           v.memory = 4024
           v.cpus = 2
        end
      end

#     config.vm.define "node-01" do |k8s_master|
#          k8s_master.vm.provision "shell", inline: common
#          k8s_master.vm.network "private_network", ip: "192.168.56.7"
#          k8s_master.vm.hostname = "192.168.56.7"
#          k8s_master.vm.provider "virtualbox" do |v|
#            v.customize ["modifyvm", :id, "--audio", "none"]
#            v.memory = 4024
#            v.cpus = 2
#         end
#       end
#
#
#     config.vm.define "node-02" do |k8s_master|
#          k8s_master.vm.provision "shell", inline: common
#          k8s_master.vm.network "private_network", ip: "192.168.56.8"
#          k8s_master.vm.hostname = "192.168.56.8"
#          k8s_master.vm.provider "virtualbox" do |v|
#            v.customize ["modifyvm", :id, "--audio", "none"]
#            v.memory = 4024
#            v.cpus = 2
#         end
#       end

end